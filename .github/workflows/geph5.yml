name: geph5
on:
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Delete Old Release
        uses: actions/github-script@v7
        with:
          script: |
            let release
            try {
              release = await github.rest.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag: 'geph5'
              })
            } catch(e) {
              console.error(e)
              return
            }
            await github.rest.repos.deleteRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release.data.id
            })
            await github.rest.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'tags/'+release.data.tag_name
            })

  build:
    runs-on: ${{ matrix.os }}
    needs: prepare
    strategy:
      matrix:
        include:
          - os: windows-latest
            name: windows-amd64
          - os: ubuntu-latest
            name: linux-amd64
          - os: macos-latest
            name: macos-arm64
    steps:
      - name: Build
        shell: bash
        run: |
          mkdir -p release
          git clone https://github.com/geph-official/geph5
          cd geph5/binaries/geph5-client
          cargo update
          cargo build --release --locked

      - name: Move client binary (non-Windows)
        if: matrix.os != 'windows-latest'
        run: mv geph5/target/release/geph5-client release/geph5-client-${{ matrix.name }}

      - name: Move client binary (Windows)
        if: matrix.os == 'windows-latest'
        shell: bash
        run: mv geph5/target/release/geph5-client.exe release/geph5-client-${{ matrix.name }}.exe

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-latest
          path: release/geph5-client*

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Create Release
        id: release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: geph5
          name: geph5
          body: geph5
          files: artifacts/*
