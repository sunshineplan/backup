name: vps
on:
  workflow_dispatch:
  schedule:
    - cron: '0 16 * * *'

jobs:
  vps:
    runs-on: ubuntu-latest
    steps:
      - name: Date
        id: date
        run: |
          echo ym=$(TZ=PRC date +'%Y/%-m') >> $GITHUB_OUTPUT
          echo date=$(TZ=PRC date +'%Y-%m-%d') >> $GITHUB_OUTPUT

      - name: Get Balance
        id: balance
        uses: actions/github-script@v7
        with:
          github-token: Bearer ${{ secrets.VPS_TOKEN }}
          script: |
            resp = await github.request('https://api.vpsserver.com/v1/user.json')
            return resp.data.user.balance
          result-encoding: string

      - name: Get Usage
        id: usage
        uses: actions/github-script@v7
        with:
          script: |
            let resp = await fetch('https://console.vpsserver.com/service/authenticate', {
              method: 'POST',
              body: JSON.stringify({ clientId: '${{ secrets.CLIENT_ID }}', secret: '${{ secrets.SECRET }}' }),
              headers: { 'Content-Type': 'application/json' }
            })
            let res = await resp.json()
            resp = await fetch('https://console.vpsserver.com/service/billing/${{ steps.date.outputs.ym }}/self', {
              headers: { Authorization: `Bearer ${res.authentication}` }
            })
            res = await resp.text()
            const re = /Network,([^,]+),.+?,(\d+\.\d+GB),/g
            let found
            const output = []
            while ((found = re.exec(res)) !== null) output.push(`${found[1]}: ${found[2]}`)
            return output.join('\n')
          result-encoding: string

      - name: Send backup email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SERVER }}
          server_port: 587
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          subject: 'VPS Usage - ${{ steps.date.outputs.date }} - Balance: $${{ steps.balance.outputs.result }}'
          body: ${{ steps.usage.outputs.result }}
          from: Github Actions
          to: ${{ secrets.TO }}
