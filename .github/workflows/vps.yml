name: vps
on:
  workflow_dispatch:
  schedule:
    - cron: '0 16 * * *'

jobs:
  vps:
    runs-on: ubuntu-latest
    steps:
      - name: Get Balance
        id: balance
        uses: actions/github-script@v7
        with:
          github-token: Bearer ${{ secrets.VPS_TOKEN }}
          script: |
            resp = await github.request('https://api.vpsserver.com/v1/user.json')
            return resp.data.user.balance
          result-encoding: string

      - name: Authentication
        id: auth
        uses: actions/github-script@v7
        with:
          script: |
            const resp = await fetch('https://console.vpsserver.com/service/authenticate', {
              method: 'POST',
              body: JSON.stringify({ clientid: '${{ secrets.CLIENT_ID }}', secret: '${{ secrets.SECRET }}' }),
              headers: { 'Content-Type': 'application/json' }
            })
            const res = await resp.json()
            return res.authentication
          result-encoding: string

      - name: Get Usage
        id: usage
        env:
          HTTPS_PROXY: ${{ secrets.HTTPS_PROXY }}
          Content_Type: "Content-Type: application/json"
          Authorization: "Authorization: Bearer ${{ steps.auth.outputs.result }}" 
        run: |
          SERVERS=$(curl -s -H "${Content_Type}" "-H ${Authorization}" "https://console.vpsserver.com/service/servers")
          OUTPUT=()
          for SERVER_INFO in $(echo "$SERVERS" | jq -c '.[]'); do
            SERVER_ID=$(echo "$SERVER_INFO" | jq -r '.id')
            SERVER_NAME=$(echo "$SERVER_INFO" | jq -r '.name')
            TRAFFIC_INFO=$(curl -s -H "${Content_Type}" "-H ${Authorization}" "https://console.vpsserver.com/service/server/${SERVER_ID}")
            if [[ $(echo "$TRAFFIC_INFO" | jq '.traffic' 2>/dev/null) != "null" ]]; then
              SERVER_TRAFFIC=$(echo "$TRAFFIC_INFO" | jq '.traffic / 1024 / 1024' | awk '{printf "%.2f", $0}')
              OUTPUT+=("${SERVER_NAME}: ${SERVER_TRAFFIC}MB")
            fi
          done
          echo result=$(echo "${OUTPUT[@]}" | tr ' ' '\n') >> $GITHUB_OUTPUT
          echo "date=$(TZ=PRC date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Send backup email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SERVER }}
          server_port: 587
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          subject: 'VPS Usage - ${{ steps.usage.outputs.date }} - Balance: $${{ steps.balance.outputs.result }}'
          body: ${{ steps.usage.outputs.result }}
          from: Github Actions
          to: ${{ secrets.TO }}
